<!--
    Copyright (c) 2019-2020, Circus.
    
    Licensed under the Apache License, Version 2.0 (the "License");
    
    You may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:base="clr-namespace:Circus.Wpf" xmlns:local="clr-namespace:Circus.Wpf.Controls" xmlns:convert="clr-namespace:Circus.Wpf.Converters" xmlns:theme="clr-namespace:Circus.Wpf.Themes">
    <Style x:Key="{x:Type local:WindowBase}" BasedOn="{StaticResource {x:Type Window}}" TargetType="{x:Type local:WindowBase}">
        <Setter Property="Background" Value="{x:Static theme:Brushes.Window}" />
        <Setter Property="BorderBrush" Value="{x:Static theme:Brushes.Window}" />
        <Setter Property="BorderThickness" Value="0.5" />
        <Setter Property="MinHeight" Value="200" />
        <Setter Property="MinWidth" Value="200" />
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CaptionHeight="32" CornerRadius="0" GlassFrameThickness="1" NonClientFrameEdges="None" ResizeBorderThickness="6" UseAeroCaptionButtons="False" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:WindowBase}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter ContentSource="Header" />
                            <StackPanel Grid.Column="1" Orientation="Horizontal">
                                <local:WindowButton Command="{base:CommandBinding local:WindowBase, Minimize}" IsActive="{Binding IsActive, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Visibility="{TemplateBinding IsMinimizable, Converter={convert:BooleanToVisibility}}" ToolTip="Minimize">
                                    <Path Data="F1 M3,8 L13,8 L13,7 L3,7" Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}" Height="16" Width="16" />
                                </local:WindowButton>
                                <local:WindowButton x:Name="Maximize" Command="{base:CommandBinding local:WindowBase, Maximize}" IsActive="{Binding IsActive, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Visibility="{TemplateBinding ResizeMode, Converter={convert:ResizeModeToVisibility}}" ToolTip="Maximize">
                                    <Path x:Name="MaximizeData" Data="F1 M12,12 L4,12 L4,4 L12,4 M3,13 L13,13 L13,3 L3,3" Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}" Height="16" Width="16" />
                                </local:WindowButton>
                                <local:WindowButton Command="{base:CommandBinding local:WindowBase, Close}" IsActive="{Binding IsActive, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Visibility="{TemplateBinding IsClosable, Converter={convert:BooleanToVisibility}}" ToolTip="Close">
                                    <Path Data="F1 M8.583,8 L13,12.424 L12.424,13 L8,8.583 L3.576,13 L3,12.424 L7.417,8 L3,3.576 L3.576,3 L8,7.417 L12.424,3 L13,3.576" Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}" Height="16" Width="16" />
                                </local:WindowButton>
                            </StackPanel>
                            <ContentPresenter ContentSource="Content" Grid.ColumnSpan="2" Grid.Row="1" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsActive" Value="True">
                            <Setter Property="BorderBrush" Value="{x:Static theme:Brushes.WindowActiveBorder}" />
                        </Trigger>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter Property="BorderThickness" Value="6" />
                            <Setter Property="Path.Data" TargetName="MaximizeData" Value="F1 M11.999,10.002 L10.998,10.002 L10.998,5.002 L5.998,5.002 L5.998,4.001 L11.999,4.001 M10.002,11.999 L4.001,11.999 L4.001,5.998 L10.002,5.998 M5.002,3 L5.002,5.002 L3,5.002 L3,13 L10.998,13 L10.998,10.998 L13,10.998 L13,3" />
                            <Setter Property="ToolTip" TargetName="Maximize" Value="Restore Down" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>