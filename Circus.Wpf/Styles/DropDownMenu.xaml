<!--
    Copyright (c) 2019-2020, Circus.
    
    Licensed under the Apache License, Version 2.0 (the "License");
    
    You may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:base="clr-namespace:Circus.Wpf" xmlns:convert="clr-namespace:Circus.Wpf.Converters" xmlns:local="clr-namespace:Circus.Wpf.Controls" xmlns:theme="clr-namespace:Circus.Wpf.Themes">
    <Style x:Key="DropDownToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Foreground" Value="{x:Static theme:Brushes.MenuItemGlyph}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Background="Transparent" HorizontalAlignment="Right">
                        <Border Background="{TemplateBinding Background}" BorderThickness="1,0,0,0" BorderBrush="{TemplateBinding BorderBrush}">
                            <Path x:Name="Arrow" Data="M 0,0 L 3,3 L 6,0 Z" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" Margin="2,3" VerticalAlignment="Center"  />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{x:Static theme:Brushes.ButtonBackgroundChecked}" />
                            <Setter Property="BorderBrush" Value="{x:Static theme:Brushes.ButtonBackgroundChecked}" />
                            <Setter Property="Fill" TargetName="Arrow" Value="{x:Static theme:Brushes.ButtonArrowChecked}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding IsPressed, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                            <Setter Property="Background" Value="{x:Static theme:Brushes.ControlBackgroundMouseOver}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type local:DropDownMenu}" TargetType="{x:Type local:DropDownMenu}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{x:Static theme:Brushes.ControlForeground}" />
        <Setter Property="Height" Value="22" />
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DropDownMenu}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition MinWidth="11" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Popup AllowsTransparency="True" Grid.ColumnSpan="2" HorizontalOffset="0" IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="{TemplateBinding ActualWidth, Converter={convert:AddToValue {base:Double 5.0}}}" Placement="Bottom" PopupAnimation="None" VerticalOffset="0">
                            <Border Background="{x:Static theme:Brushes.ControlBackground}" BorderBrush="{x:Static theme:Brushes.ControlBorder}" BorderThickness="1" Margin="0,0,5,5" Padding="2">
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="3" ShadowDepth="3" Opacity="0.4" />
                                </Border.Effect>
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </Border>
                        </Popup>
                        <Border Background="{TemplateBinding Background}">
                            <StackPanel Orientation="Horizontal">
                                <ContentPresenter ContentSource="Header" HorizontalAlignment="Center" RecognizesAccessKey="True" VerticalAlignment="Center" Width="20" />
                                <TextBlock x:Name="Text" Foreground="{TemplateBinding Foreground}" Margin="2,0,3,0" Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" />
                            </StackPanel>
                        </Border>
                        <ToggleButton x:Name="Toggle" Grid.ColumnSpan="2" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource DropDownToggleButton}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{x:Static theme:Brushes.ControlForegroundDisabled}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{x:Static theme:Brushes.ControlBackgroundMouseOver}" />
                            <Setter Property="Foreground" TargetName="Toggle" Value="{x:Static theme:Brushes.ArrowMouseOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{x:Static theme:Brushes.ControlBackgroundPressed}" />
                            <Setter Property="Foreground" Value="{x:Static theme:Brushes.ControlForegroundPressed}" />
                        </Trigger>
                        <Trigger Property="IsChecked" SourceName="Toggle" Value="True">
                            <Setter Property="Background" Value="{x:Static theme:Brushes.ButtonBackgroundChecked}" />
                            <Setter Property="Foreground" Value="{x:Static theme:Brushes.ControlForegroundPressed}" />
                            <Setter Property="ToolTipService.IsEnabled" Value="False" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="Text" Value="Collapsed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>