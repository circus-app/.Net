<!--
    Copyright (c) 2019-2020, Circus.
    
    Licensed under the Apache License, Version 2.0 (the "License");
    
    You may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:base="clr-namespace:Circus.Wpf" xmlns:convert="clr-namespace:Circus.Wpf.Converters" xmlns:local="clr-namespace:Circus.Wpf.Controls" xmlns:theme="clr-namespace:Circus.Wpf.Themes">
    <Style x:Key="{x:Static local:SelectorViewItem.ButtonStyleKey}" TargetType="{x:Type ButtonBase}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Foreground" Value="{x:Static theme:Brushes.MenuItemGlyph}" />
        <Setter Property="Height" Value="16" />
        <Setter Property="ToolTip" Value="Close" />
        <Setter Property="Width" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{x:Static theme:Brushes.SelectorViewItemButtonMouseOver}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type local:SelectorViewItem}" BasedOn="{StaticResource {x:Type MenuItem}}" TargetType="{x:Type local:SelectorViewItem}">
        <Setter Property="Command" Value="{base:CommandBinding local:SelectorViewItem, Select}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SelectorViewItem}">
                    <Border x:Name="Border" Padding="0,3,0,3">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="32" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="24" />
                                <ColumnDefinition Width="4" />
                            </Grid.ColumnDefinitions>
                            <Rectangle Grid.ColumnSpan="4" Fill="Transparent" />
                            <ContentPresenter Content="{TemplateBinding Icon}" Height="16" HorizontalAlignment="Left" Margin="4,0,0,0" VerticalAlignment="Center" Width="16" />
                            <ContentPresenter Content="{TemplateBinding Header}" Grid.Column="1" Margin="0,0,36,0" />
                            <Button Command="{base:CommandBinding local:SelectorViewItem, Close}" CommandParameter="{TemplateBinding CommandParameter}" Grid.Column="2" Style="{StaticResource {x:Static local:SelectorViewItem.ButtonStyleKey}}" Visibility="{TemplateBinding IsHighlighted, Converter={convert:BooleanToVisibility}}">
                                <Path Data="F1 M0,0 L2,0 L5,3 L8,0 L10,0 L6,4 L10,8 L8,8 L5,5 L2,8 L0,8 L4,4 L0,0" Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}" Height="8" Stretch="Uniform" Width="10" />
                            </Button>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="{x:Static theme:Brushes.ControlBackgroundMouseOver}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>